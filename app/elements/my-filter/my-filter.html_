<link rel="import" href="../../bower_components/polymer/polymer.html">
<link rel="import" href="../../bower_components/iron-icons/iron-icons.html">
<link rel="import" href="../../bower_components/iron-input/iron-input.html">
<link rel="import" href="../../bower_components/paper-input/paper-input-container.html">
<link rel="import" href="../../bower_components/paper-date-picker/paper-date-picker.html">
<link rel="import" href="../../bower_components/paper-button/paper-button.html">
<link rel="import" href="../../bower_components/paper-dialog/paper-dialog.html">
<link rel="import" href="../../bower_components/paper-toggle-button/paper-toggle-button.html">
<link rel="import" href="../../bower_components/iron-flex-layout/iron-flex-layout-classes.html">
<link rel="import" href="../../bower_components/paper-card/paper-card.html">


<dom-module id="my-filter">
  <template>
    <style is="custom-style" include="iron-flex iron-flex-alignment iron-flex-reverse">
      :root {
        --paper-badge: {
          margin-top: 40px;
        }
      }
      paper-item {
        border-bottom: 1px solid var(--divider-color);
      }
      paper-item:focus:before {
        background-color: var(--primary-background-color);
      }
      .iron-selected {
        background-color: var(--divider-color);
      }
      .dropdown-container{
        display: inline-block;
      }
      .dropdown-container > paper-badge {
        --paper-badge-margin-left: -25px;
        --paper-badge-background: var(--divider-color);
      }

      :host {
        --paper-card: {
          margin-right: 10px;
          @apply(--paper-font-body1);
        };

        --paper-card-content: {
          padding: 0;
          padding-left: 16px;
          pdding-top: 0;
          padding-right: 16px;
          padding-bottom: 8px;
        };

        --paper-card-header-image: {

        };

        --paper-card-actions: {
          position: relative;
          top: -30px;
          right: 0;
          border-top: 0;
          text-align: right;
          padding: 0;
          padding-right: 8px;
        }
      }

      div.filter-header {
        font-size: 24px;
        font-weight: 400;
        color: var(--paper-card-header-color, #000);

        padding: 0;
        padding-top: 16px;
        padding-left: 0;
        padding-right: 0;
        padding-bottom: 8px;
      }

      div.filter-remove-icon iron-icon {
        --iron-icon-width: 16px;
        --iron-icon-height: 16px;
      }

      div.filter-remove-icon {
        float: right;
        font-size: 15px;
        vertical-align: middle;
        padding-left: 8px;
      }

      div.layout.vertical {
        margin-right: 10px;
      }
      div.layout.vertical-reverse {
        margin-right: 10px;
      }
    </style>

    <div class="layout horizontal layout-start">
      <div class="layout vertical layout-start">
        <my-date-picker id="dateFromDatepicker" label="Eventdatum von" placeholder="Datum eingeben" date="{{dateFrom}}"></my-date-picker>
        <my-dropdown-menu id="meeting-points-dropdown" label="Treffpunkt" placeholder="Treffpunkt ausw채hlen" url$="[[url]]/time-sheet/meetingPointList" selected-items="{{meetingPoints}}"></my-dropdown-menu>
      </div>

      <div class="layout vertical layout-start">
        <my-date-picker id="dateToDatepicker" label="Eventdatum bis" placeholder="Datum eingeben" date="{{dateTo}}"></my-date-picker>
        <my-dropdown-menu id="topics-dropdown" label="Thema" placeholder="Thema ausw채hlen" url$="[[url]]/time-sheet/topicList" selected-items="{{topics}}"></my-dropdown-menu>
      </div>
      <div class="layout vertical-reverse layout-start">
          <my-dropdown-menu id="event-types-dropdown" label="Eventtyp" placeholder="Eventtyp ausw채hlen" url$="[[url]]/time-sheet/eventTypeList" selected-items="{{eventTyps}}"></my-dropdown-menu>
      </div>
      <div class="layout vertical-reverse layout-start">
        <my-json-request url$="[[url]]/time-sheet/resourceTypeView" result="{{resourceList}}"></my-json-request>
      </div>
      <div class="layout vertical-reverse layout-start">
          <paper-dropdown-menu id="ressources-dropdown" label="Ressourcen" placeholder="Ressourcen ausw채hlen">
            <div class="dropdown-content">
              <iron-selector multi attr-for-selected="name" selected-items="{{resources}}" selectable="selectable">
                <template is="dom-repeat" items="[[resourceList]]">
                  <div class="layout vertical layout-start">
                  <paper-item name="{{item.resTypeId}}">{{item.resTypeName}}</paper-item>
                    <div class="layout vertical layout-start">
                  <template is="dom-repeat" items="[[item.relatedResources]]" as="resource">
                    <paper-item name="{{resource.resId}}" class="selectable">{{resource.resName}}</paper-item>
                  </template>
                    </div>
                  </div>
                </template>
              </iron-selector>
            </div>
          </paper-dropdown-menu>
      </div>
      <div class="layout vertical-reverse layout-start">
          <paper-toggle-button name="excludeCanceledEventsToggle" checked="{{filters.excludeCanceledEvents}}">Ausgefallene Events ausblenden</paper-toggle-button>
        </div>
      </div>
    </div>
    <div class="layout horizontal layout-start">
        <template is="dom-repeat" items="{{meetingPoints}}">
          <paper-card class="layout vertical layout-start">
            <div class="card-content">
              <div class="filter-header">Treffpunkt<div class="filter-remove-icon"><iron-icon icon="remove-circle-outline" on-tap="onRemoveMeetingPoint"></iron-icon></div></div>
              <div class="filter-content">{{item.outerText}}</div>
            </div>
          </paper-card>
        </template>
        <template is="dom-repeat" items="{{filters.topics}}">
          <paper-card heading="Thema" class="layout vertical layout-start">
            <div class="card-content">{{item.bezeichnung}}</div>
          </paper-card>
        </template>
        <template is="dom-repeat" items="{{filters.eventTyps}}">
          <paper-card heading="Eventtyp" class="layout vertical layout-start" elevation="1">
            <div class="card-content">{{item.bezeichnung}}</div>
          </paper-card>
        </template>
    </div>
  </template>
  <script>
    HTMLImports.whenReady(function () {
      Polymer({
        is: 'my-filter',

        properties: {
          filters: {
            type: Object,
            value: { dateFrom: null, dateTo: null, excludeCanceledEvents: false, eventTyps: [], meetingPoints: [], topics: [] },
            notify: true
          },

          dateFrom: {
            type: Date,
            observer: 'onDateFromChanged'
          },

          dateTo: {
            type: Object,
            notify: true,
            observer: 'onDateToChanged'
          },

          meetingPoints: {
            type: Array,
            value: [],
            observer: 'onMeetingpointsSelected'
          },

          topics: {
            type: Array,
            observer: 'onTopicsSelected'
          },

          eventTyps: {
            type: Array,
            observer: 'onEventTypesSelected'
          },

          resources: {
            type: Array,
            observer: 'onResourceSelected'
          },

          url: String
        },

      onDateFromChanged: function (newValue, oldValue) {
        console.log(this.localName + ' onDateFromChanged fired!');
        this.set('filters.dateFrom', newValue); // newValue.getTime()
      },

      onDateToChanged: function(newValue, oldValue) {
        console.log(this.localName + ' onDateToChanged fired!');
        this.set('filters.dateTo', newValue); // newValue.getTime()
      },

      onMeetingpointsSelected: function (newValue, oldValue) {
        console.log(this.localName + ' onMeetingpointsSelected fired!', newValue, oldValue);
        var values = [];
        for (var i = 0; i < newValue.length; i++)
        {
          values[i] = { id: newValue[i].name, bezeichnung: newValue[i].outerText };
        }
        this.set('filters.meetingPoints', values);
      },

      onTopicsSelected: function (newValue, oldValue) {
        console.log(this.localName + ' onTopicsSelected fired!', newValue, oldValue);
        var values = [];
        for (var i = 0; i < newValue.length; i++)
        {
          values[i] = { id: newValue[i].name, bezeichnung: newValue[i].outerText };
        }
        this.set('filters.topics', values);
      },

      onEventTypesSelected: function (newValue, oldValue) {
        console.log(this.localName + ' onEventTypesSelected fired!', newValue, oldValue);
        var values = [];
        for (var i = 0; i < newValue.length; i++)
        {
          values[i] = { id: newValue[i].name, bezeichnung: newValue[i].outerText };
        }
        this.set('filters.eventTyps', values);
      },

      onResourceSelected: function (newValue, oldValue) {
          console.log(this.localName + ' onResourceSelected fired!', newValue, oldValue);
          var values = [];
          for (var i = 0; i < newValue.length; i++)
          {
            values[i] = { id: newValue[i].name, bezeichnung: newValue[i].outerText };
          }
          this.set('filters.resources', values);
      },

      onRemoveMeetingPoint: function (e) {
        console.log(this.localName + ' onRemoveMeetingPoint fired!' ,e, e.detail, e.model.item);
        var idx = this.meetingPoints.indexOf(e.model.item);
//        this.filters.meetingPoints.pop(idx);
        this.meetingPoints.pop(idx);
        this.fire('selected-items-changed', this.meetingPoints);
//        this.set('meetingPoints', this.meetingPoints);
//        this.set('filters.meetingPoints', this.filters.meetingPoints);
      }
    });
  });

  </script>
</dom-module>
